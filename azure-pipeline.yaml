trigger:
  batch: true
  branches:
    include:
    - develop
    - main
    - devops

pr: none

variables:
  agentOS: ubuntu-latest

stages:

  - stage: Build
    displayName: Build and push docker image
    jobs: 
      - job: Build
        pool:
          vmImage: $(agentOS)
        steps:
        - task: DownloadSecureFile@1
          name: envStage
          condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
          inputs:
            secureFile: 'env-front-stage'
        - task: Bash@3
          name: setEnvStage
          inputs:
            targetType: 'inline'
            script: 'mv $(envStage.secureFilePath) .env'
        - task: DockerCompose@0
          inputs:
            containerregistrytype: 'Azure Container Registry'
            azureSubscription: 'S2s-Service'
            azureContainerRegistry: 'S2sStage'
            dockerComposeFile: '**/compose.yaml'
            dockerComposeFileArgs: |
              PROXY_API_URL=$(PROXY_API_URL)
            action: 'Build services'
            imageName: 'front-stage:$(Build.BuildId)'
       
        - task: DockerCompose@0
          inputs:
            containerregistrytype: 'Azure Container Registry'
            azureSubscription: 'S2s-Service'
            azureContainerRegistry: 'S2sStage'
            dockerComposeFile: '**/compose.yaml'
            action: 'Push services'
            imageName: 'front-stage:$(Build.BuildId)'
            

  - stage: Deploy
    displayName: Deploy image to app service
    jobs:
     - job: Deploy
       pool:
         vmImage: $(agentOS)
       steps:
         - task: AzureRmWebAppDeployment@4
           inputs:
             ConnectionType: 'AzureRM'
             azureSubscription: 'S2s-Service'
             appType: 'webAppContainer'
             WebAppName: 's2s-front-stage'
             DockerNamespace: 's2sstage.azurecr.io'
             DockerRepository: 'front-stage'
             DockerImageTag: '$(Build.BuildId)'
             