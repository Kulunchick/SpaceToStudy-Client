trigger:
  batch: true
  branches:
    include:
    - develop
    - main
    - devops
    
variables:
  agentOS: ubuntu-latest

stages:

  - stage: Build
    displayName: Build and push docker image
    jobs: 
      - job: Build
        pool:
          vmImage: $(agentOS)
        steps:
        - task: DownloadSecureFile@1
          name: envStage
          condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/test-azure-pipeline'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/feature/1659/deployment-proxy'))
          inputs:
            secureFile: 'env-front-stage'
        - task: Bash@3
          name: setEnvStage
          inputs:
            targetType: 'inline'
            script: 'mv $(envStage.secureFilePath) .env'
        - task: DockerCompose@1
          inputs:
            dockerComposePath: '/usr/libexec/docker/cli-plugins/docker-compose'
            containerregistrytype: 'Azure Container Registry'
            azureSubscription: 'S2s-Service'
            azureContainerRegistry: '{"loginServer":"s2sstage.azurecr.io", "id" : "/subscriptions/734fc759-c3a2-4e22-a478-301dc5b10496/resourceGroups/Space2Study/providers/Microsoft.ContainerRegistry/registries/S2sStage"}'
            dockerComposeFile: '**/compose.yml'
            dockerComposeFileArgs: |
              PROXY_API_URL=$(PROXY_API_URL)
              password=$(password)
            projectName: 'front-stage'
            action: 'Build services'
            additionalImageTags: '$(Build.BuildId)'
       
        - task: DockerCompose@1
          inputs:
            dockerComposePath: '/usr/libexec/docker/cli-plugins/docker-compose'
            containerregistrytype: 'Azure Container Registry'
            azureSubscription: 'S2s-Service'
            azureContainerRegistry: '{"loginServer":"s2sstage.azurecr.io", "id" : "/subscriptions/734fc759-c3a2-4e22-a478-301dc5b10496/resourceGroups/Space2Study/providers/Microsoft.ContainerRegistry/registries/S2sStage"}'
            dockerComposeFile: '**/compose.yml'
            dockerComposeFileArgs: |
              PROXY_API_URL=$(PROXY_API_URL)
              password=$(password)
            projectName: 'front-stage'
            action: 'Push services'
            additionalImageTags: '$(Build.BuildId)'

        - bash: |
            echo "Listing all .yml files in the agent's working directory:"
            find /home/vsts/agents -name "*.yml" -type f
            echo "Contents of all found .yml files:"
            for file in $(find /home/vsts/agents -name "*.yml" -type f); do
              echo "File: $file"
              echo "------------------------"
              cat "$file"
              echo "------------------------"
              echo ""
            done
          displayName: 'Check all .yml files'
